1.搭建项目环境
    导入各个jar包
      <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
      </properties>

      <dependencies>

        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>

        <!--<dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>-->

        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.12</version>
        </dependency>

        <!--Servlet-->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>4.0.1</version>
          <scope>provided</scope>
        </dependency>

        <!--JSTL-->
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
        </dependency>

        <!--springmvc依赖-->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>

        <!--Spring的事务-->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>

        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aspects</artifactId>
          <version>4.3.16.RELEASE</version>
        </dependency>

        <!--jackson-->
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>2.9.0</version>
        </dependency>
        <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>2.9.0</version>
        </dependency>
        <!--mybatis-->
        <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>1.3.1</version>
        </dependency>
        <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis</artifactId>
          <version>3.4.5</version>
        </dependency>
        <!--mysql驱动-->
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.9</version>
        </dependency>
        <!--连接池-->
        <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>druid</artifactId>
          <version>1.1.12</version>
        </dependency>

        <!--poi-->
        <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi</artifactId>
          <version>3.15</version>
        </dependency>

        <!-- 文件上传 -->
        <dependency>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
          <version>1.3.1</version>
        </dependency>

      </dependencies>

      <build>
        <resources>
          <resource>
            <directory>src/main/java</directory><!--所在的目录-->
            <includes><!--包括目录下的.properties,.xml文件都会扫描到-->
              <include>**/*.properties</include>
              <include>**/*.xml</include>
            </includes>
            <filtering>false</filtering>
          </resource>
        </resources>
        <plugins>
          <!-- 编码和编译和JDK版本 -->
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>//这里和老师版本不同，3.1似乎用不了
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
        </plugins>
      </build>
2.配置web.xml
    Spring容器的监听器
    springMVC配置文件的过滤器
    中文乱码过滤器
    * web.xml
        * 配置梳理
            * 加载Spring容器的监听器
                * applicationContext-service.xml
                    1. 注解扫描,扫描service包下的注解
                    2. 声明式事务控制
                        * AOP,拦截所有service方法
                        * 以save/update/delete开头的方法命名,开启事务
                    3. 加载applicationContext-dao.xml
                * applicationContext-dao.xml
                    1. 数据库连接池配置
                        * driver,username,url,password
                        * 注入SqlSessionFactoryBean
                            * Mybatis的工厂对象
                            * 加载了mybatis-config.xml配置文件
                                * 接口扫描和别名配置和sql日志语句输出
                        * 注入MapperScanner对象
                            * 批量接口扫描dao接口,并创建代理对象,交给spring容器进行管理
            * 加载SpringMVC配置文件的过滤器
                * applicationContext-web.xml
                    1. 注解扫描,扫描controller包下的注解
                    2. 视图解析器
                        * 前缀:/WEB-INF/jsp/
                        * 后缀:.jsp
                    3. 拦截器
                        * 权限操作拦截器
                        * 拦截所有请求和放行部分请求
                    4. 文件上传解析器
                    5. 注解驱动声明
            * 中文乱码过滤器

